<?php

/**
 * BaseItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $proposal_id
 * @property integer $service_id
 * @property integer $amount
 * @property decimal $unit_cost
 * @property string $comments
 * @property Proposal $Proposal
 * @property Service $Service
 * 
 * @method integer  getId()          Returns the current record's "id" value
 * @method integer  getProposalId()  Returns the current record's "proposal_id" value
 * @method integer  getServiceId()   Returns the current record's "service_id" value
 * @method integer  getAmount()      Returns the current record's "amount" value
 * @method decimal  getUnitCost()    Returns the current record's "unit_cost" value
 * @method string   getComments()    Returns the current record's "comments" value
 * @method Proposal getProposal()    Returns the current record's "Proposal" value
 * @method Service  getService()     Returns the current record's "Service" value
 * @method Item     setId()          Sets the current record's "id" value
 * @method Item     setProposalId()  Sets the current record's "proposal_id" value
 * @method Item     setServiceId()   Sets the current record's "service_id" value
 * @method Item     setAmount()      Sets the current record's "amount" value
 * @method Item     setUnitCost()    Sets the current record's "unit_cost" value
 * @method Item     setComments()    Sets the current record's "comments" value
 * @method Item     setProposal()    Sets the current record's "Proposal" value
 * @method Item     setService()     Sets the current record's "Service" value
 * 
 * @package    limbo
 * @subpackage model
 * @author     Damian Suarez / Laura Melo
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('item');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('proposal_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('service_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('amount', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('unit_cost', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             ));
        $this->hasColumn('comments', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));


        $this->setAttribute(Doctrine_Core::ATTR_EXPORT, Doctrine_Core::EXPORT_ALL);

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Proposal', array(
             'local' => 'proposal_id',
             'foreign' => 'id'));

        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}